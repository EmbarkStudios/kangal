syntax = "proto3";
package grpc.proxy.v2;

import "google/api/annotations.proto";

message Tag {
    string key = 1;
    string value = 2;
}

enum LoadTestType {
    LOAD_TEST_TYPE_UNSPECIFIED = 0;
    LOAD_TEST_TYPE_JMETER = 1;
    LOAD_TEST_TYPE_FAKE = 2;
    LOAD_TEST_TYPE_LOCUST = 3;
}

enum LoadTestPhase {
    LOAD_TEST_PHASE_UNSPECIFIED = 0;
    LOAD_TEST_PHASE_CREATING = 1;
    LOAD_TEST_PHASE_STARTING = 2;
    LOAD_TEST_PHASE_RUNNING = 3;
    LOAD_TEST_PHASE_FINISHED = 4;
    LOAD_TEST_PHASE_ERRORED = 5;
}

message LoadTestStatus {
    // Name is the load test name that always matches k8s namespace where it runs
    string name = 1;
    int32 distributed_pods = 2;
    LoadTestPhase phase = 3;
    repeated Tag tags = 4;
    bool has_env_vars = 5;
    bool has_test_data = 6;
    LoadTestType type = 7;
}

message GetRequest {
    string name = 1;
}

message GetResponse {
    LoadTestStatus load_test_status = 1;
}

message ListRequest {
    repeated Tag tags = 1;
    int64 limit = 2;
    string continue = 3;
}

message ListResponse {
    int64 limit = 1;
    string continue = 2;
    int64 remain = 3;
    repeated LoadTestStatus load_test_statuses = 4;
}

service LoadTestService {
    // Get returns load test by given name
    rpc Get (GetRequest) returns (GetResponse) {
        option (google.api.http) = {
            get: "/v2/load-test/{name}"
        };
    }
    // List searches and returns load tests by given filters
    rpc List (ListRequest) returns (ListResponse) {
        option (google.api.http) = {
            get: "/v2/load-test"
        };
    }
}
